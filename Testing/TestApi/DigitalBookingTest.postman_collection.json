{
	"info": {
		"_postman_id": "2102cd83-717e-4caf-9fc8-c572e31ebd42",
		"name": "DigitalBookingTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post completo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Se espera status 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"lujosos\",\r\n  \"description\": \"autos lujosos y caros\",\r\n  \"imgUrl\": \"url1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/save",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"save"
					]
				}
			},
			"response": []
		},
		{
			"name": "Enviando un campo vacio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperamos error 400\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Esperamos status 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"\",\r\n  \"description\": \"string\",\r\n  \"imgUrl\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/save",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"save"
					]
				}
			},
			"response": []
		},
		{
			"name": "Enviando una categoria ya existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperamos un conflicto\", function(){\r",
							"    pm.response.to.have.status(409)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"economicos\",\r\n  \"description\": \"autos economicos y buenos\",\r\n  \"imgUrl\": \"url3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/save",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"save"
					]
				}
			},
			"response": []
		},
		{
			"name": "Enviando datos que no sean string (boolean y integer)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperamos un error 400 por Bad request\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"categoria x\",\r\n  \"description\": true,\r\n  \"imgUrl\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/save",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"save"
					]
				}
			},
			"response": []
		},
		{
			"name": "Testeamos end point de traer todas las categorias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonResponse = pm.response.json();\r",
							"pm.test(\"Esperamos un array de objetos\", function(){\r",
							"    pm.expect(jsonResponse).to.be.an(\"array\");\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request Get ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let schema = {\r",
							"    \"id\":\"Long\",\r",
							"    \"name\":\"string\",\r",
							"    \"description\":\"string\",\r",
							"    \"imgUrl\":\"string\"\r",
							"}\r",
							"\r",
							"\r",
							"let schema2 = {\r",
							"    \"id\": String,\r",
							"    \"name\": true,\r",
							"    \"description\": \"string\",\r",
							"    \"imgUrl\":String\r",
							"}\r",
							"\r",
							"\r",
							"pm.test('Schema is valid #1', function() {\r",
							"  pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test('Schema is valid #2', function() {\r",
							"  pm.response.to.have.jsonSchema(schema2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category/id/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"id",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request ID de categoria no existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperamos un error 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category/id/100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"id",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get request por nombre de categoria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperamos un status 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category/name/lujosos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"name",
						"lujosos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get request: nombre de una categoria no existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperamos error 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category/name/motos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"name",
						"motos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete request: Eliminando una categoria existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperando un status 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category/delete/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"delete",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Request: Eliminando una categoria no existente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperando un status 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"})\r",
							"\r",
							"pm.test(\"Esperando un status 400\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/category/delete/100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"delete",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Happy path update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperando un status 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"let jsonResponse = pm.response.json();\r",
							"pm.test(\"Esperamos un objeto\", function(){\r",
							"    pm.expect(jsonResponse).to.be.an(\"object\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": 3,\r\n        \"name\": \"deportivos\",\r\n        \"description\": \"autos deportivos para viajar\",\r\n        \"imgUrl\": \"url3\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bad request PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperando un status 400\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": 3,\r\n        \"name\": \"deportivos\",\r\n        \"description\": \"autos deportivos para viajar\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Esperando un status 400\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"deportivos\",\r\n        \"description\": \"autos deportivos para viajar\",\r\n        \"imgUrl\": \"url300\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/category/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"category",
						"update"
					]
				}
			},
			"response": []
		}
	]
}